name: Laravel

on:
  push:
    branches: [ 'main', '*/*' ]
  pull_request:
    branches: [ '**' ]

jobs:
  CacheComposer:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout code
          uses: actions/checkout@v2
  
        - name: Set up PHP
          uses: shivammathur/setup-php@v2
          with:
            php-version: '8.2'
            extensions: mysql, mongodb
  
        - name: Get Composer Cache Directory
          id: composer-cache
          run: |
            echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
        - uses: actions/cache@v3
          with:
            path: ${{ github.workspace }}/vendor
            key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
            restore-keys: |
              ${{ runner.os }}-composer-
        - name: Install Composer dependencies
          run: composer install --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
        
  PhpStan:
    runs-on: ubuntu-latest
    needs: [CacheComposer]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mysql, mongodb
      - name: Composer Install
        run:  composer install --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: PHP Stan
        uses: php-actions/phpstan@v3
        with:
          configuration: phpstan.neon
  PhpCSFixer:
    runs-on: ubuntu-latest
    needs: [CacheComposer]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mysql, mongodb
      - name: Composer Install
        run: composer install --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: PHP CS Fixer
        run: |
          ./vendor/bin/php-cs-fixer fix --dry-run --diff ./app
  CliMarkdown:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mysql, mongodb
      - name: Composer Install
        run: composer install --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      - name: Install Cli-markdown
        run: npm install -g markdownlint-cli
      - name: Run cli-markdown
        run: markdownlint '**/*.md'
  Migrate:
    runs-on: ubuntu-latest
    needs: [PhpCSFixer, PhpStan]
    services:
      mysql-service:
        image: mysql:8
        env:
          MYSQL_DATABASE: parking
          MYSQL_USER: admin
          MYSQL_ROOT_PASSWORD: password
          MYSQL_PASSWORD: password
        ports:
          - 3306/tcp
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mysql, mongodb
      - name: Install Composer dependencies
        run: composer install --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      - name: Configure Laravel
        run: |
           cp .env.ci .env
           php artisan key:generate
           php artisan config:clear
      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.10.0
        with:
            mongodb-version: '4.4.9'
            mongodb-port: 27017
            mongodb-username: root
            mongodb-password: password
            mongodb-db: parking

      - name: Run migrations
        run: php artisan migrate
        env:
          DB_PORT: ${{ job.services.mysql-service.ports[3306]}}
          DB_HOST: 127.0.0.1
  Tests:
    runs-on: ubuntu-latest
    needs: [PhpCSFixer, PhpStan]
    steps:
    - name: Checkout Code
      uses: actions/checkout@v2
    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mysql, mongodb
    - name: Install Composer dependencies
      run: composer install --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
    - name: Configure Laravel
      run: |
            cp .env.ci .env
            php artisan key:generate
            php artisan config:clear
    - name: Run tests
      run: php artisan test
      env:
        DB_PORT: ${{ job.services.mysql-service.ports[3306]}}
  SnykTests:
    runs-on: ubuntu-latest
    needs: [ Tests, Migrate]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mysql, mongodb
      - name: Install Composer dependecies
        run: composer install --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      # Snyk Static analysis step
      - name: Snyk Code Analysis
        run: |
          npm install -g snyk
          snyk auth ${{ secrets.SNYK_API_TOKEN }}
          snyk test
  SonarCloud:
    runs-on: ubuntu-latest
    needs: [Tests, Migrate]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Analyze with SonarCloud
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }}

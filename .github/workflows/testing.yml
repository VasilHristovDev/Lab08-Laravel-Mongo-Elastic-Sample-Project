name: Testing

on:
  push:
    branches-exclude: ['main']

jobs:
  CacheComposer:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mysql, mongodb
      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      - name: Install Composer dependencies
        run: composer install --no-ansi --no-interaction
          --no-scripts --no-progress --prefer-dist
  ValidateYaml:
    runs-on: ubuntu-latest
    needs: [CacheComposer]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Validate YAML files
        run: yamllint .
  CliMarkdown:
    runs-on: ubuntu-latest
    needs: [CacheComposer]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Install Cli-markdown
        run: npm install -g markdownlint-cli
      - name: Run cli-markdown
        run: markdownlint '**/*.md' --ignore vendor
  EditorConfig:
    name: Check .editorconfig file
    runs-on: ubuntu-latest
    needs: [CacheComposer]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Install editorconfig-checker
        run: npm install editorconfig-checker -g
      - name: run editorconfig-checker to code
        run: editorconfig-checker --exclude vendor --exclude .idea
  PhpStan:
    runs-on: ubuntu-latest
    needs: [CacheComposer]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mysql, mongodb
      - name: Restore Composer dependencies from cache
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      - name: Composer Install
        run: composer install --no-ansi --no-interaction
          --no-scripts --no-progress --prefer-dist
      - name: PHP Stan
        uses: php-actions/phpstan@v3
        with:
          configuration: phpstan.neon
  PhpCSFixer:
    runs-on: ubuntu-latest
    needs: [CacheComposer]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mysql, mongodb
      - name: Restore Composer dependencies from cache
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      - name: Composer Install
        run: composer install --no-ansi --no-interaction
          --no-scripts --no-progress --prefer-dist
      - name: PHP CS Fixer
        run: |
          ./vendor/bin/php-cs-fixer fix --dry-run --diff ./app
  Tests:
    runs-on: ubuntu-latest
    needs: [PhpCSFixer, PhpStan]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mysql, mongodb
      - name: Restore Composer dependencies from cache
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      - name: Install Composer dependencies
        run: composer install --no-ansi --no-interaction
          --no-scripts --no-progress --prefer-dist
      - name: Configure Laravel
        run: |
          cp .env.ci .env
          php artisan key:generate
          php artisan config:clear
      - name: Run tests
        run: php artisan test
        env:
          DB_PORT: ${{ job.services.mysql-service.ports[3306]}}
  SnykTests:
    runs-on: ubuntu-latest
    needs: [Tests]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      # Snyk Static analysis step
      - name: Snyk Code Analysis
        run: |
          npm install -g snyk
          snyk auth ${{ secrets.SNYK_API_TOKEN }}
          snyk test
  SonarCloud:
    runs-on: ubuntu-latest
    needs: [Tests]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Analyze with SonarCloud
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }}
  Gitleaks:
    runs-on: ubuntu-latest
    needs: [Tests]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
